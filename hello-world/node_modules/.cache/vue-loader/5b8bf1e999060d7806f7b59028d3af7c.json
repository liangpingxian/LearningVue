{"remainingRequest":"/Users/lpx/Documents/learn/hello-world/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lpx/Documents/learn/hello-world/src/views/Test.vue?vue&type=style&index=0&id=5b2d5ecc&scoped=true&lang=css&","dependencies":[{"path":"/Users/lpx/Documents/learn/hello-world/src/views/Test.vue","mtime":1556025048226},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* 让文本框铺开 */\n.form-item >>> .el-form-item__content {\n  flex: 1;\n}\n",{"version":3,"sources":["Test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA","file":"Test.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <!-- 业务建模详情 -->\n  <div class=\"content\">\n    <!-- 动态字段区域 -->\n    <el-form\n      :model=\"businessData\"\n      ref=\"ruleForm\"\n      class=\"dynamic\"\n    >\n      <!-- 循环行 -->\n      <div\n        class=\"columns-region\"\n        v-for=\"columns in businessData.layouts\"\n        :key=\"columns[0].uuid\"\n      >\n        <!-- 循环行内 -->\n        <div\n          class=\"column\"\n          v-for=\"column in columns\"\n          :key=\"column.uuid\"\n          :uuid=\"column.uuid\"\n          :style=\"styleWithColumn(column)\"\n        >\n          <!-- 根据配置读取不同的字段模板 -->\n          <el-form-item\n            class=\"form-item\"\n            :label='column.name'\n            :required='column.isRequired()'\n          >\n            <div v-if='column.isFieldType(ColumnType.select)'>单选控件</div>\n            <div v-else-if='column.isFieldType(ColumnType.date)'>时间控件</div>\n            <div v-else-if='column.isFieldType(ColumnType.attachment)'>附件控件</div>\n            <div v-else-if='column.isFieldType(ColumnType.detailParent)'>明细控件</div>\n            <div v-else-if='column.isFieldType(ColumnType.pureText)'>纯文本控件</div>\n            <div v-else-if='column.isFieldType(ColumnType.child)'>子项</div>\n            <BMInputComponent\n              v-else\n              :originData='column'\n            >\n            </BMInputComponent>\n          </el-form-item>\n        </div>\n      </div>\n    </el-form>\n    <!-- 动态配置的通知人、审批人、审批意见等 -->\n    <div class=\"custom-region\">\n    </div>\n    <!-- 按钮 -->\n    <div class=\"buttons-region\">\n    </div>\n  </div>\n</template>\n<script>\nimport BusinessModel from './business/js/bmDetailModel/BusinessModel.js'\nimport * as ColumnComponent from './business/components'\nimport { BussinessFieldType } from './business/js/BusinessCommonHeader.js';\nimport { testData } from './business/js/testData.js'\nexport default {\n  name: 'Test',\n  data () {\n    return {\n      // 业务建模的整体数据实例\n      businessData: {},\n      // 字段类型枚举 用来判断调用什么组件\n      ColumnType: BussinessFieldType,\n    }\n  },\n  methods: {\n    // 计算每一个column样式\n    styleWithColumn (column) {\n      let color = column.color ? column.color : black;\n      return `\n        flex-basis:${column.getStyleWidth()};\n        color:${column.color ? column.color : black};\n      `\n    }\n\n  },\n  components: { 'BMInputComponent': ColumnComponent.BMInputComponent },\n  computed: {\n\n  },\n  mounted () {\n    this.businessData = new BusinessModel(testData);\n  },\n}\n</script>\n<style scoped>\n/* 让文本框铺开 */\n.form-item >>> .el-form-item__content {\n  flex: 1;\n}\n</style>\n\n<style lang='scss' scoped>\n.dynamic {\n  text-align: left;\n  .columns-region {\n    display: flex;\n    flex-flow: row;\n    overflow-x: auto;\n    overflow-y: hidden;\n    .column {\n      flex-shrink: 0;\n      // 横向展示\n      .form-item {\n        display: flex;\n        flex-flow: row;\n      }\n    }\n  }\n}\n</style>\n"]}]}