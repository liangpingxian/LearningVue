{"remainingRequest":"/Users/lpx/Documents/learn/hello-world/node_modules/babel-loader/lib/index.js!/Users/lpx/Documents/learn/hello-world/node_modules/eslint-loader/index.js??ref--13-0!/Users/lpx/Documents/learn/hello-world/src/views/business/js/bmDetailModel/BusinessColumnProcess.js","dependencies":[{"path":"/Users/lpx/Documents/learn/hello-world/src/views/business/js/bmDetailModel/BusinessColumnProcess.js","mtime":1556013917321},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lpx/Documents/learn/hello-world/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.for-each\";\n// 处理服务器返回的行信息\nimport { BussinessFieldType } from '../BusinessCommonHeader.js';\nimport * as Column from '../columns'; // 处理字段的方法\n\nvar processColumns = function processColumns(fieldsData) {\n  var fields = [];\n  fieldsData.forEach(function (element) {\n    var field = columnClassCreater(element);\n    fields.push(field);\n  });\n  return fields;\n}; // 处理数据行\n\n\nvar columnClassCreater = function columnClassCreater(element) {\n  var field;\n\n  switch (element.fieldType) {\n    case BussinessFieldType.inputCommon:\n    case BussinessFieldType.inputNumber:\n    case BussinessFieldType.inputAmount:\n      field = new Column.InputColumn(element);\n      break;\n\n    case BussinessFieldType.detailParent:\n      field = new Column.DetailColumn(element);\n      break;\n\n    case BussinessFieldType.select:\n      field = new Column.SelectColumn(element);\n      break;\n\n    case BussinessFieldType.date:\n      field = new Column.DateColumn(element);\n      break;\n\n    case BussinessFieldType.pureText:\n      field = new Column.PureTextColumn(element);\n      break;\n\n    case BussinessFieldType.child:\n      field = new Column.ChildColumn(element);\n      break;\n\n    case BussinessFieldType.attachment:\n      field = new Column.AttachmentColumn(element);\n      break;\n\n    default:\n      field = new Column.SelectColumn(element);\n      break;\n  }\n\n  return field;\n};\n/**\n *\n *\n * @param {*} data  模板数据\n * @param {*} fields 行信息\n * @returns 处理好的布局数据二维数组 不存在key\n */\n\n\nvar processLayout = function processLayout(data, fields) {\n  var returnData = [];\n  var layoutData = JSON.parse(data);\n  var currentIndex = 0;\n  layoutData.model.forEach(function (element) {\n    var oneLineData = [];\n    element.fields.forEach(function () {\n      oneLineData.push(fields[currentIndex]);\n      currentIndex++;\n    });\n    returnData.push(oneLineData);\n  });\n  return returnData;\n};\n\nexport { processColumns, processLayout };",{"version":3,"sources":["/Users/lpx/Documents/learn/hello-world/src/views/business/js/bmDetailModel/BusinessColumnProcess.js"],"names":["BussinessFieldType","Column","processColumns","fieldsData","fields","forEach","element","field","columnClassCreater","push","fieldType","inputCommon","inputNumber","inputAmount","InputColumn","detailParent","DetailColumn","select","SelectColumn","date","DateColumn","pureText","PureTextColumn","child","ChildColumn","attachment","AttachmentColumn","processLayout","data","returnData","layoutData","JSON","parse","currentIndex","model","oneLineData"],"mappings":";AAAA;AACA,SAASA,kBAAT,QAAmC,4BAAnC;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB,C,CAEA;;AACA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAASC,UAAT,EAAqB;AACxC,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAC5B,QAAIC,KAAK,GAAGC,kBAAkB,CAACF,OAAD,CAA9B;AACAF,IAAAA,MAAM,CAACK,IAAP,CAAYF,KAAZ;AACD,GAHD;AAIA,SAAOH,MAAP;AACD,CAPD,C,CAQA;;;AACA,IAAII,kBAAkB,GAAG,SAArBA,kBAAqB,CAASF,OAAT,EAAkB;AACzC,MAAIC,KAAJ;;AACA,UAAQD,OAAO,CAACI,SAAhB;AACE,SAAKV,kBAAkB,CAACW,WAAxB;AACA,SAAKX,kBAAkB,CAACY,WAAxB;AACA,SAAKZ,kBAAkB,CAACa,WAAxB;AACEN,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACa,WAAX,CAAuBR,OAAvB,CAAR;AACA;;AACF,SAAKN,kBAAkB,CAACe,YAAxB;AACER,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACe,YAAX,CAAwBV,OAAxB,CAAR;AACA;;AACF,SAAKN,kBAAkB,CAACiB,MAAxB;AACEV,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACiB,YAAX,CAAwBZ,OAAxB,CAAR;AACA;;AACF,SAAKN,kBAAkB,CAACmB,IAAxB;AACEZ,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACmB,UAAX,CAAsBd,OAAtB,CAAR;AACA;;AACF,SAAKN,kBAAkB,CAACqB,QAAxB;AACEd,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACqB,cAAX,CAA0BhB,OAA1B,CAAR;AACA;;AACF,SAAKN,kBAAkB,CAACuB,KAAxB;AACEhB,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACuB,WAAX,CAAuBlB,OAAvB,CAAR;AACA;;AACF,SAAKN,kBAAkB,CAACyB,UAAxB;AACElB,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACyB,gBAAX,CAA4BpB,OAA5B,CAAR;AACA;;AACF;AACEC,MAAAA,KAAK,GAAG,IAAIN,MAAM,CAACiB,YAAX,CAAwBZ,OAAxB,CAAR;AACA;AA1BJ;;AA4BA,SAAOC,KAAP;AACD,CA/BD;AAiCA;;;;;;;;;AAOA,IAAIoB,aAAa,GAAG,SAAhBA,aAAgB,CAASC,IAAT,EAAexB,MAAf,EAAuB;AACzC,MAAIyB,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAjB;AACA,MAAIK,YAAY,GAAG,CAAnB;AACAH,EAAAA,UAAU,CAACI,KAAX,CAAiB7B,OAAjB,CAAyB,UAAAC,OAAO,EAAI;AAClC,QAAI6B,WAAW,GAAG,EAAlB;AACA7B,IAAAA,OAAO,CAACF,MAAR,CAAeC,OAAf,CAAuB,YAAM;AAC3B8B,MAAAA,WAAW,CAAC1B,IAAZ,CAAiBL,MAAM,CAAC6B,YAAD,CAAvB;AACAA,MAAAA,YAAY;AACb,KAHD;AAIAJ,IAAAA,UAAU,CAACpB,IAAX,CAAgB0B,WAAhB;AACD,GAPD;AAQA,SAAON,UAAP;AACD,CAbD;;AAeA,SAAS3B,cAAT,EAAyByB,aAAzB","sourcesContent":["// 处理服务器返回的行信息\nimport { BussinessFieldType } from '../BusinessCommonHeader.js';\nimport * as Column from '../columns';\n\n// 处理字段的方法\nlet processColumns = function(fieldsData) {\n  let fields = [];\n  fieldsData.forEach(element => {\n    let field = columnClassCreater(element);\n    fields.push(field);\n  });\n  return fields;\n};\n// 处理数据行\nlet columnClassCreater = function(element) {\n  let field;\n  switch (element.fieldType) {\n    case BussinessFieldType.inputCommon:\n    case BussinessFieldType.inputNumber:\n    case BussinessFieldType.inputAmount:\n      field = new Column.InputColumn(element);\n      break;\n    case BussinessFieldType.detailParent:\n      field = new Column.DetailColumn(element);\n      break;\n    case BussinessFieldType.select:\n      field = new Column.SelectColumn(element);\n      break;\n    case BussinessFieldType.date:\n      field = new Column.DateColumn(element);\n      break;\n    case BussinessFieldType.pureText:\n      field = new Column.PureTextColumn(element);\n      break;\n    case BussinessFieldType.child:\n      field = new Column.ChildColumn(element);\n      break;\n    case BussinessFieldType.attachment:\n      field = new Column.AttachmentColumn(element);\n      break;\n    default:\n      field = new Column.SelectColumn(element);\n      break;\n  }\n  return field;\n};\n\n/**\n *\n *\n * @param {*} data  模板数据\n * @param {*} fields 行信息\n * @returns 处理好的布局数据二维数组 不存在key\n */\nlet processLayout = function(data, fields) {\n  let returnData = [];\n  let layoutData = JSON.parse(data);\n  let currentIndex = 0;\n  layoutData.model.forEach(element => {\n    let oneLineData = [];\n    element.fields.forEach(() => {\n      oneLineData.push(fields[currentIndex]);\n      currentIndex++;\n    });\n    returnData.push(oneLineData);\n  });\n  return returnData;\n};\n\nexport { processColumns, processLayout };\n"]}]}